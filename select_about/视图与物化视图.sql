/*
一.视图是一种只读的虚拟表,实际存储的是一个预定义的可能比较复杂的查询语句
视图通常有以下几个特点:
1.简化复杂的查询语句
2.限制用户访问,用户能看到的内容受限于视图所存储的查询语句
3.汇总各个表中的数据,用于生成报告
PostgreSQL 视图是只读的，因此可能无法在视图上执行 DELETE、INSERT 或 UPDATE 语句。但是可以在视图上创建一个触发器，当尝试 DELETE、INSERT 或 UPDATE 视图时触发，
需要做的动作在触发器内容中定义。
*/

-- 创建视图的语法,其中query表示一个select查询语句
create view view_name as query;

/*
二.物化视图,与视图作用类似,不同的是它实际储存的是查询语句的结果集
物化视图通常有以下几个特点:
1.调用时因为不必扫描原始表,而是扫描结果集,所以速度上比普通视图更快
2.因为存储的是结果集，所以物化视图支持索引
3.但是当原表更新后,视图正常可用,而物化视图需要手动做全更新(非增量更新)refresh materialized view view_name
4.物化视图可以与外部表配合使用,假设PostgreSQL中定义了一个外表(Foreign Table)，该表可能存在于外部的一个数据库，也可能是一个LDAP服务器，或者是CSV，XML。
扫描该表时，可能会很慢。如果针对这个外表定义一个物化视图，就可以把对外表的查询结果保存起来，后续的扫描就不必扫描并加载外部数据了。
*/

-- 创建物化视图与创建普通视图语法类似,只多一个关键字materialized
create materialized view view_name as query;

-- 链接：一文搞懂postgresql物化视图 - https://www.modb.pro/db/49046
